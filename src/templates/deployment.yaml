apiVersion: apps/v1
kind: Deployment
metadata:
  name: ti-service
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ti-service.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{.Values.maxSurge}}
      maxUnavailable: {{.Values.maxUnavailable}}
  selector:
    matchLabels:
      {{- include "ti-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ti-service.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ti-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: 30
      containers:
        - name: ti-service
          image: {{ include "harnesscommon.names.imagename" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
              {{- toYaml .Values.securityContext | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: http-ti-service
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: http-ti-service
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          ports:
          - name: http-ti-service
            containerPort: {{.Values.service.port}}
            protocol: "TCP"
          env:
          - name: MONGODB_USERNAME
            valueFrom:
              secretKeyRef:
                name: harness-secret
                key: mongodbUsername
          - name: MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: harness-secret
                key: mongodbPassword
          - name: TI_SERVICE_MONGODB_CONN_STR
            value: 'mongodb://$(MONGODB_USERNAME):$(MONGODB_PASSWORD)@mongodb-replicaset-chart-0.mongodb-replicaset-chart.{{ .Release.Namespace }}.svc:27017/ti-harness?authSource=admin'
          - name: TI_SERVICE_TIMESCALE_USERNAME
            value: "postgres"
          - name: TI_SERVICE_TIMESCALE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: harness-secret
                key: "timescaledbPostgressPassword"
          - name: TSDB_URL
            value: 'postgres://postgres:$(TI_SERVICE_TIMESCALE_PASSWORD)@timescaledb-single-chart.{{ .Release.Namespace }}:5432/harnessti'
          envFrom:
          - configMapRef:
              name: ti-service
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - ti-service
            topologyKey: "kubernetes.io/hostname"
      {{- with .Values.affinity }}
        {{- toYaml . | nindent 8 }}  
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}